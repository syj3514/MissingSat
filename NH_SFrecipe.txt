federrath3

if(d <= d_gmc):
    No SF
    * d_gmc = max(nCOM, n_gmc)/scale_nH
    * n_gmc=10d0     !1d2 in NH.nml/PHYSICS_PARAMS
    * nCOM = del_star*omega_b*rhoc*(h0/100.)**2/aexp**3*XH/mH
    * del_star=2.D2     ! Minimum overdensity to define ISM
    * omega_b = 0.0455
    * rhoc = 1.8800000d-29
    * h0 = see `output_amr.f90: 442`
    * XH = X = 0.76
    * mH = 1.6600000d-24
else:
    (trgv) Calculate turbulence velocity from the density differences from neighbor cells
        [ (vx_left+vx_self)/(dens_left+dens_self) - (vx_right+vx_self)/(den_right+den_self) ]**2 +
        [ (vy_left+vy_self)/(dens_left+dens_self) - (vy_right+vy_self)/(den_right+den_self) ]**2 +
        [ (vz_left+vz_self)/(dens_left+dens_self) - (vz_right+vz_self)/(den_right+den_self) ]**2 +
        [ (vx_top+vx_self)/(dens_top+dens_self) - (vx_bottom+vx_self)/(den_bottom+den_self) ]**2 +
        [ (vy_top+vy_self)/(dens_top+dens_self) - (vy_bottom+vy_self)/(den_bottom+den_self) ]**2 +
        [ (vz_top+vz_self)/(dens_top+dens_self) - (vz_bottom+vz_self)/(den_bottom+den_self) ]**2 +
        [ (vx_front+vx_self)/(dens_front+dens_self) - (vx_behind+vx_self)/(den_behind+den_self) ]**2 +
        [ (vy_front+vy_self)/(dens_front+dens_self) - (vy_behind+vy_self)/(den_behind+den_self) ]**2 +
        [ (vz_front+vz_self)/(dens_front+dens_self) - (vz_behind+vz_self)/(den_behind+den_self) ]**2 +
    (c_s2) Calculate sound speed from cell temperature
        max( uold(ind_cell(i),5)*(gamma -1.0), smallc**2 )
        * uold(???, 5) <- Pressure
        * gamma=1.6666667
        * smallc=1.d-10
    (alpha0) Calculate virial parameter
        5 / (onepi*factG*d)*(trgv + c_s2)/dx_loc**2
    (e_cts) =0.5 (or the dense gas core-to-star efficiency)
    (phi_t, theta) =0.57, 0.33
    (sigs) Mach number squared
        log(1.0+0.16*trgv/c_s2)
    (scrit) critical density ratio
        log(0.067/theta**2*alpha0*trgv/c_s2)
    
    (sfr_ff) star formation rate per free-fall time (sfr_ff) for the cell
        e_cts/2.0*phi_t*exp(3.0/8.0*sigs)*(2.0-erfc((sigs-scrit)/sqrt(2.0*sigs)))


    (tstar) free fall time of an homogeneous sphere
        0.5427*sqrt(1.0/(factG*d))
    (PoissMean)
        dtnew(ilevel)*sfr_ff(i)/tstar*mcell/mstar
        PoissMean = min(PoissMean,10.0) # less than 10 for representative value
        call poissdev(ompseed,PoissMean,nstar(i))
        -> save the number from poisson distribution to nstar(i)


Other params:
* factG = 3d0/4d0/twopi*omega_m*aexp
